// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`action-types should create action types and actions with tests 1`] = `
"
--------------------------------------------------------------------------------
// ./action-types/__tests__/index.spec.js
// Create
--------------------------------------------------------------------------------

import { AN_ACTION, ANOTHER_ACTION } from '../';

describe('\`test\` action types', () => {
  it('should export \`AN_ACTION\` type', () => {
    expect(AN_ACTION).toBe('AN_ACTION');
  });

  it('should export \`ANOTHER_ACTION\` type', () => {
    expect(ANOTHER_ACTION).toBe('ANOTHER_ACTION');
  });
});







--------------------------------------------------------------------------------
// ./action-types/index.js
// Create
--------------------------------------------------------------------------------

export const AN_ACTION = 'AN_ACTION';
export const ANOTHER_ACTION = 'ANOTHER_ACTION';







--------------------------------------------------------------------------------
// ./actions/__tests__/index.spec.js
// Create
--------------------------------------------------------------------------------

import { AN_ACTION, ANOTHER_ACTION } from '../../action-types';
import { anAction, anotherAction } from '../';

describe('\`test\` action creators', () => {
  it('should export \`anAction\` function', () => {
    expect(anAction).toBeDefined();
    expect(anAction()).toEqual({
      type: AN_ACTION
    });
  });

  it('should export \`anotherAction\` function', () => {
    expect(anotherAction).toBeDefined();
    expect(anotherAction()).toEqual({
      type: ANOTHER_ACTION
    });
  });
});







--------------------------------------------------------------------------------
// ./actions/index.js
// Create
--------------------------------------------------------------------------------

import { createAction } from 'redux-actions';
import { AN_ACTION, ANOTHER_ACTION } from '../action-types';

export const anAction = createAction(AN_ACTION);
export const anotherAction = createAction(ANOTHER_ACTION);







--------------------------------------------------------------------------------
// ./store/__tests__/reducer.spec.js
// Create
--------------------------------------------------------------------------------

import reducer from '../reducer';
import { anAction, anotherAction } from '../../actions';

describe('\`test\` reducer', () => {
  it('should exist', () => {
    expect(reducer).toBeDefined();
  });

  it('should return default state', () => {
    const next = reducer(undefined, { type: 'UNKNOWN_TYPE' });
    expect(next).toMatchSnapshot();
  });

  it('should handle \`AN_ACTION\`', () => {
    const next = reducer(undefined, anAction());
    expect(next).toMatchSnapshot();
    const next2 = reducer(next, anAction('anAction-value'));
    expect(next2).toMatchSnapshot();
  });

  it('should handle \`ANOTHER_ACTION\`', () => {
    const next = reducer(undefined, anotherAction());
    expect(next).toMatchSnapshot();
    const next2 = reducer(next, anotherAction('anotherAction-value'));
    expect(next2).toMatchSnapshot();
  });
});







--------------------------------------------------------------------------------
// ./store/reducer.js
// Create
--------------------------------------------------------------------------------

import { AN_ACTION, ANOTHER_ACTION } from '../action-types';

export default (
  state = {
    anAction: 'anAction-initial-value',
    anotherAction: 'anotherAction-initial-value'
  },
  { type, payload, error }
) => {
  switch (type) {
    case AN_ACTION: {
      return { ...state, anAction: payload || 'anAction-value', error };
    }
    case ANOTHER_ACTION: {
      return {
        ...state,
        anotherAction: payload || 'anotherAction-value',
        error
      };
    }
    default:
      return state;
  }
};





"
`;

exports[`action-types should create action types and actions with tests in \`my-dir\` 1`] = `
"
--------------------------------------------------------------------------------
// ./action-types/__tests__/index.spec.js
// Create
--------------------------------------------------------------------------------

import { AN_ACTION, ANOTHER_ACTION } from '../';

describe('\`test\` action types', () => {
  it('should export \`AN_ACTION\` type', () => {
    expect(AN_ACTION).toBe('AN_ACTION');
  });

  it('should export \`ANOTHER_ACTION\` type', () => {
    expect(ANOTHER_ACTION).toBe('ANOTHER_ACTION');
  });
});







--------------------------------------------------------------------------------
// ./action-types/index.js
// Create
--------------------------------------------------------------------------------

export const AN_ACTION = 'AN_ACTION';
export const ANOTHER_ACTION = 'ANOTHER_ACTION';







--------------------------------------------------------------------------------
// ./actions/__tests__/index.spec.js
// Create
--------------------------------------------------------------------------------

import { AN_ACTION, ANOTHER_ACTION } from '../../action-types';
import { anAction, anotherAction } from '../';

describe('\`test\` action creators', () => {
  it('should export \`anAction\` function', () => {
    expect(anAction).toBeDefined();
    expect(anAction()).toEqual({
      type: AN_ACTION
    });
  });

  it('should export \`anotherAction\` function', () => {
    expect(anotherAction).toBeDefined();
    expect(anotherAction()).toEqual({
      type: ANOTHER_ACTION
    });
  });
});







--------------------------------------------------------------------------------
// ./actions/index.js
// Create
--------------------------------------------------------------------------------

import { createAction } from 'redux-actions';
import { AN_ACTION, ANOTHER_ACTION } from '../action-types';

export const anAction = createAction(AN_ACTION);
export const anotherAction = createAction(ANOTHER_ACTION);







--------------------------------------------------------------------------------
// ./store/__tests__/reducer.spec.js
// Create
--------------------------------------------------------------------------------

import reducer from '../reducer';
import { anAction, anotherAction } from '../../actions';

describe('\`test\` reducer', () => {
  it('should exist', () => {
    expect(reducer).toBeDefined();
  });

  it('should return default state', () => {
    const next = reducer(undefined, { type: 'UNKNOWN_TYPE' });
    expect(next).toMatchSnapshot();
  });

  it('should handle \`AN_ACTION\`', () => {
    const next = reducer(undefined, anAction());
    expect(next).toMatchSnapshot();
    const next2 = reducer(next, anAction('anAction-value'));
    expect(next2).toMatchSnapshot();
  });

  it('should handle \`ANOTHER_ACTION\`', () => {
    const next = reducer(undefined, anotherAction());
    expect(next).toMatchSnapshot();
    const next2 = reducer(next, anotherAction('anotherAction-value'));
    expect(next2).toMatchSnapshot();
  });
});







--------------------------------------------------------------------------------
// ./store/reducer.js
// Create
--------------------------------------------------------------------------------

import { AN_ACTION, ANOTHER_ACTION } from '../action-types';

export default (
  state = {
    anAction: 'anAction-initial-value',
    anotherAction: 'anotherAction-initial-value'
  },
  { type, payload, error }
) => {
  switch (type) {
    case AN_ACTION: {
      return { ...state, anAction: payload || 'anAction-value', error };
    }
    case ANOTHER_ACTION: {
      return {
        ...state,
        anotherAction: payload || 'anotherAction-value',
        error
      };
    }
    default:
      return state;
  }
};





"
`;

exports[`action-types should create action types with tests in \`action-types\` 1`] = `
"
--------------------------------------------------------------------------------
// ./action-types/__tests__/index.spec.js
// Create
--------------------------------------------------------------------------------

import { AN_ACTION, ANOTHER_ACTION } from '../';

describe('\`test\` action types', () => {
  it('should export \`AN_ACTION\` type', () => {
    expect(AN_ACTION).toBe('AN_ACTION');
  });

  it('should export \`ANOTHER_ACTION\` type', () => {
    expect(ANOTHER_ACTION).toBe('ANOTHER_ACTION');
  });
});







--------------------------------------------------------------------------------
// ./action-types/index.js
// Create
--------------------------------------------------------------------------------

export const AN_ACTION = 'AN_ACTION';
export const ANOTHER_ACTION = 'ANOTHER_ACTION';





"
`;
